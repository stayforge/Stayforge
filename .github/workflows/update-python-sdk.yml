name: Generate and Update Python SDK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-sdk:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out source repository
      - name: Checkout source repository
        uses: actions/checkout@v3

      # Step 2: Get the current branch name and tag
      - name: Get current branch name and tag
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo "TAG=${TAG}" >> $GITHUB_ENV
          else
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "TAG=${SHORT_SHA}" >> $GITHUB_ENV
          fi

      # Step 3: Install Python environment
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'  # Python version used

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r requirements.txt

      # Step 5: Generate OpenAPI JSON
      - name: Generate OpenAPI JSON
        run: |
          python app.py

      # Step 6: Download OpenAPI Generator CLI
      - name: Download OpenAPI Generator CLI
        run: |
          curl -o openapi-generator-cli.jar https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.9.0/openapi-generator-cli-7.9.0.jar

      # Step 7: Generate Python SDK
      - name: Generate Python SDK
        run: |
          java -jar openapi-generator-cli.jar generate \
            -i openapi.json \
            -g python \
            -o ./output
            -c ./.github/openapi/python/config.yaml
            --additional-properties=packageVersion=${TAG},appVersion=${TAG}

      # Step 8: Push Python SDK to target repository
      - name: Push Python SDK to target repository
        run: |
          git config --global user.name "Tokujunsystems-BOT"
          git config --global user.email "190532409+Tokujunsystems-BOT@users.noreply.github.com"
          
          git clone https://x-access-token:${BOT_PAT}@github.com/tokujun-t/stayforge-python.git stayforge-python/
          cd stayforge-python
          
          if git rev-parse --verify ${branch_name}; then
            echo "Branch ${branch_name} already exists. Switching to it."
            git checkout ${branch_name}
          else
            echo "Branch ${branch_name} does not exist. Creating it."
            git checkout -b ${branch_name}
          fi
          
          cp -r ../output/* .
          git add .
          git commit -m "Update Python SDK [skip ci]" || echo "No changes to commit"
          git push origin ${branch_name}
        env:
          BOT_PAT: ${{ secrets.BOT_PAT }}