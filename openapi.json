{"openapi": "3.1.0", "info": {"title": "Stayforge API", "description": "This is a basic API description.", "version": "1.0.0"}, "paths": {"/api/healthcheck/": {"get": {"tags": ["Healthcheck"], "summary": "Ping", "description": "ping! pong! ping!ping!ping!......pong?", "operationId": "ping_api_healthcheck__get", "responses": {"200": {"description": "pong", "content": {"application/json": {"schema": {}}}}}}}, "/api/healthcheck/info": {"get": {"tags": ["Healthcheck"], "summary": "Info", "description": "Stayforge API Info", "operationId": "info_api_healthcheck_info_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Stayforge"}}}}}}}, "/api/webhooks_manager/": {"get": {"tags": ["Webhooks Manager"], "summary": "Get Webhooks Profile", "operationId": "get_webhooks_profile_api_webhooks_manager__get", "parameters": [{"name": "webhook_name", "in": "query", "required": false, "schema": {"type": "string", "description": "A friendly name you can remember.", "title": "Webhook Name"}, "description": "A friendly name you can remember."}, {"name": "endpoint", "in": "query", "required": false, "schema": {"type": "string", "pattern": "^(https?|http|https)://[a-zA-Z,\\*\\s]+/?$", "description": "The URL endpoint where the webhook is to be sent, e.g., `https://youapplocation/webhook/endpoint`.", "title": "Endpoint"}, "description": "The URL endpoint where the webhook is to be sent, e.g., `https://youapplocation/webhook/endpoint`."}, {"name": "catch_path", "in": "query", "required": false, "schema": {"type": "string", "pattern": "^(/[^/ ]*)+/?$", "description": "This refers to the API within Stayforage, the path part of its URL e.g., `/api/order/`.", "title": "Catch Path"}, "description": "This refers to the API within Stayforage, the path part of its URL e.g., `/api/order/`."}, {"name": "catch_method", "in": "query", "required": false, "schema": {"type": "string", "description": "Only configured HTTP methods (e.g., `POST`) that the request will capture.", "title": "Catch Method"}, "description": "Only configured HTTP methods (e.g., `POST`) that the request will capture."}, {"name": "catch_status", "in": "query", "required": false, "schema": {"type": "integer", "description": "Only configured HTTP status code (e.g., `200`) that the request will capture.", "title": "Catch Status"}, "description": "Only configured HTTP status code (e.g., `200`) that the request will capture."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhooksManagerResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Webhooks Manager"], "summary": "Create Webhooks Profile", "operationId": "create_webhooks_profile_api_webhooks_manager__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhooksManagerInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhooksManagerResponses"}}}}, "409": {"description": "Resource maybe created. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/webhooks_manager/<id>": {"get": {"tags": ["Webhooks Manager"], "summary": "Get Webhooks Profile", "operationId": "get_webhooks_profile_api_webhooks_manager__id__get", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhooksManagerResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Webhooks Manager"], "summary": "Delete Webhooks Profile", "operationId": "delete_webhooks_profile_api_webhooks_manager__id__delete", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhooksManagerResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Webhooks Manager"], "summary": "Put Webhooks Profile", "operationId": "put_webhooks_profile_api_webhooks_manager__id__put", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhooksManagerInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhooksManagerResponses"}}}}, "409": {"description": "Resource maybe changed. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/branch/": {"get": {"tags": ["Branches"], "summary": "Get Keys", "operationId": "get_keys_api_branch__get", "parameters": [{"name": "name", "in": "query", "required": false, "schema": {"type": "string", "title": "Name"}}, {"name": "address", "in": "query", "required": false, "schema": {"type": "string", "title": "Address"}}, {"name": "telephone", "in": "query", "required": false, "schema": {"type": "string", "title": "Telephone"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__branch__view__KeyResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Branches"], "summary": "Create Key", "operationId": "create_key_api_branch__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__branch__models__KeyInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__branch__view__KeyResponses"}}}}, "409": {"description": "Resource maybe created. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/branch/<id>": {"get": {"tags": ["Branches"], "summary": "Get Key", "operationId": "get_key_api_branch__id__get", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__branch__view__KeyResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Branches"], "summary": "Delete Key", "operationId": "delete_key_api_branch__id__delete", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__branch__view__KeyResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Branches"], "summary": "Put Key", "operationId": "put_key_api_branch__id__put", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__branch__models__KeyInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__branch__view__KeyResponses"}}}}, "409": {"description": "Resource maybe changed. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/room/": {"get": {"tags": ["Rooms"], "summary": "Get Rooms", "operationId": "get_rooms_api_room__get", "parameters": [{"name": "name", "in": "query", "required": false, "schema": {"type": "string", "title": "Name"}}, {"name": "address", "in": "query", "required": false, "schema": {"type": "string", "title": "Address"}}, {"name": "telephone", "in": "query", "required": false, "schema": {"type": "string", "title": "Telephone"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Rooms"], "summary": "Create Room", "operationId": "create_room_api_room__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomResponses"}}}}, "409": {"description": "Resource maybe created. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/room/<id>": {"get": {"tags": ["Rooms"], "summary": "Get Room", "operationId": "get_room_api_room__id__get", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Rooms"], "summary": "Delete Room", "operationId": "delete_room_api_room__id__delete", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Rooms"], "summary": "Put Room", "operationId": "put_room_api_room__id__put", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomResponses"}}}}, "409": {"description": "Resource maybe changed. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/room_type/": {"get": {"tags": ["Room Types"], "summary": "Get Room Types", "operationId": "get_room_types_api_room_type__get", "parameters": [{"name": "name", "in": "query", "required": true, "schema": {"type": "string", "description": "The Type of RoomTypeType", "title": "Name"}, "description": "The Type of RoomTypeType"}, {"name": "description", "in": "query", "required": false, "schema": {"type": "string", "description": "Description of the room_type type", "title": "Description"}, "description": "Description of the room_type type"}, {"name": "price", "in": "query", "required": true, "schema": {"type": "integer", "description": "Current price. If you deploy a price controller, this value will be updated automatically.", "title": "Price"}, "description": "Current price. If you deploy a price controller, this value will be updated automatically."}, {"name": "price_policy", "in": "query", "required": false, "schema": {"type": "string", "description": "The price controller will modify the corresponding price field based on the price policy ID.", "title": "Price Policy"}, "description": "The price controller will modify the corresponding price field based on the price policy ID."}, {"name": "price_max", "in": "query", "required": false, "schema": {"type": "integer", "description": "The max of price.", "title": "Price Max"}, "description": "The max of price."}, {"name": "price_min", "in": "query", "required": true, "schema": {"type": "integer", "description": "The min of price.", "title": "Price Min"}, "description": "The min of price."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomTypeResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Room Types"], "summary": "Create Room Type", "operationId": "create_room_type_api_room_type__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomTypeInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomTypeResponses"}}}}, "409": {"description": "Resource maybe created. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/room_type/<id>": {"get": {"tags": ["Room Types"], "summary": "Get Room Type", "operationId": "get_room_type_api_room_type__id__get", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomTypeResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Room Types"], "summary": "Delete Room Type", "operationId": "delete_room_type_api_room_type__id__delete", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomTypeResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Room Types"], "summary": "Put Room Type", "operationId": "put_room_type_api_room_type__id__put", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomTypeInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoomTypeResponses"}}}}, "409": {"description": "Resource maybe changed. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/order/order_types": {"get": {"tags": ["Orders"], "summary": "Get Order Types", "description": "Call this API or Click `Try it out` and `Execute` to see the order types you can use.", "operationId": "get_order_types_api_order_order_types_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/order/": {"post": {"tags": ["Orders"], "summary": "Create Order", "description": "If the order number is None when creating, it will be automatically created and then returned.Please record the order number for subsequent operations.", "operationId": "create_order_api_order__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderInput"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderResponses"}}}}, "409": {"description": "Resource maybe created. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/order/<id>": {"get": {"tags": ["Orders"], "summary": "Get Order By Id", "operationId": "get_order_by_id_api_order__id__get", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/order/num/<num>": {"get": {"tags": ["Orders"], "summary": "Get Order By Num", "operationId": "get_order_by_num_api_order_num__num__get", "parameters": [{"name": "num", "in": "query", "required": true, "schema": {"type": "string", "title": "Num"}}, {"name": "get_all", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Get all orders with the same order number. When it's `true`, This time all Orders are returned, otherwise `false` **only the latest Order will be returned**.", "default": false, "title": "Get All"}, "description": "Get all orders with the same order number. When it's `true`, This time all Orders are returned, otherwise `false` **only the latest Order will be returned**."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/order/_delete/<id>": {"delete": {"tags": ["Orders"], "summary": "Delete Order", "description": "**WARING:** Order generally does not need to be deleted. You only need to **create a new one to overwrite it**.", "operationId": "delete_order_api_order__delete__id__delete", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/key/<id>": {"get": {"tags": ["Key Manager"], "summary": "Get Key", "operationId": "get_key_api_key__id__get", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__key_manager__view__KeyResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Key Manager"], "summary": "Delete Key", "operationId": "delete_key_api_key__id__delete", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__key_manager__view__KeyResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Key Manager"], "summary": "Put Key", "operationId": "put_key_api_key__id__put", "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "string", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__key_manager__models__KeyInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__key_manager__view__KeyResponses"}}}}, "409": {"description": "Resource maybe changed. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/key/num/<num>": {"get": {"tags": ["Key Manager"], "summary": "Get Key By Num", "operationId": "get_key_by_num_api_key_num__num__get", "parameters": [{"name": "num", "in": "query", "required": false, "schema": {"type": "string", "title": "Num"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__key_manager__view__KeyResponses"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/key/": {"post": {"tags": ["Key Manager"], "summary": "Create Key", "operationId": "create_key_api_key__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__key_manager__models__KeyInput"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/api__key_manager__view__KeyResponses"}}}}, "409": {"description": "Resource maybe created. But can't found it."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Guest-Input": {"properties": {"first_name": {"type": "string", "title": "First Name", "examples": ["\u9999\u7e54"]}, "middle_name": {"type": "string", "title": "Middle Name", "examples": [""]}, "last_name": {"type": "string", "title": "Last Name", "examples": ["\u9577\u8c37\u5ddd"]}, "gender": {"type": "string", "title": "Gender", "examples": ["M", "F", "..."]}, "birthday": {"type": "string", "title": "Birthday", "examples": ["1994-06-23"]}, "nationality": {"type": "string", "title": "Nationality", "examples": ["JPN"]}, "email": {"type": "string", "title": "Email", "examples": ["miki64@example.org"]}, "phone_number": {"type": "string", "title": "Phone Number", "examples": ["080-6811-6229"]}, "address": {"type": "string", "title": "Address", "examples": ["\u79cb\u7530\u770c\u5e9c\u4e2d\u5e02\u4e0a\u5e83\u8c3711\u4e01\u76ee22\u756a1\u53f7"]}, "occupation": {"type": "string", "title": "Occupation", "examples": ["\u30b2\u30fc\u30e0\u30af\u30ea\u30a8\u30a4\u30bf\u30fc"]}, "passport_number": {"type": "string", "title": "Passport Number", "examples": ["FH254787"]}, "id_document": {"anyOf": [{"$ref": "#/components/schemas/IDDocument-Input"}, {"type": "null"}]}}, "type": "object", "required": ["id_document"], "title": "Guest"}, "Guest-Output": {"properties": {"first_name": {"type": "string", "title": "First Name", "examples": ["\u9999\u7e54"]}, "middle_name": {"type": "string", "title": "Middle Name", "examples": [""]}, "last_name": {"type": "string", "title": "Last Name", "examples": ["\u9577\u8c37\u5ddd"]}, "gender": {"type": "string", "title": "Gender", "examples": ["M", "F", "..."]}, "birthday": {"type": "string", "title": "Birthday", "examples": ["1994-06-23"]}, "nationality": {"type": "string", "title": "Nationality", "examples": ["JPN"]}, "email": {"type": "string", "title": "Email", "examples": ["miki64@example.org"]}, "phone_number": {"type": "string", "title": "Phone Number", "examples": ["080-6811-6229"]}, "address": {"type": "string", "title": "Address", "examples": ["\u79cb\u7530\u770c\u5e9c\u4e2d\u5e02\u4e0a\u5e83\u8c3711\u4e01\u76ee22\u756a1\u53f7"]}, "occupation": {"type": "string", "title": "Occupation", "examples": ["\u30b2\u30fc\u30e0\u30af\u30ea\u30a8\u30a4\u30bf\u30fc"]}, "passport_number": {"type": "string", "title": "Passport Number", "examples": ["FH254787"]}, "id_document": {"anyOf": [{"$ref": "#/components/schemas/IDDocument-Output"}, {"type": "null"}]}}, "type": "object", "required": ["id_document"], "title": "Guest"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "IDDocument-Input": {"properties": {"MRZ": {"type": "string", "title": "Mrz", "examples": ["P<UTOERIKSSON<<ANNA<MARIA<<<<<<<<<<<<<<<<<<<L898902C36UTO7408122F1204159ZE184226B<<<<<10"]}, "photocopy": {"anyOf": [{"type": "string", "minLength": 1, "format": "uri"}, {"type": "string"}, {"type": "null"}], "title": "Photocopy", "examples": ["https://a.s3storage.address/photocopy/1970010112839010/1.jpg"]}}, "type": "object", "title": "IDDocument"}, "IDDocument-Output": {"properties": {"MRZ": {"type": "string", "title": "Mrz", "examples": ["P<UTOERIKSSON<<ANNA<MARIA<<<<<<<<<<<<<<<<<<<L898902C36UTO7408122F1204159ZE184226B<<<<<10"]}, "photocopy": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Photocopy", "examples": ["https://a.s3storage.address/photocopy/1970010112839010/1.jpg"]}}, "type": "object", "title": "IDDocument"}, "Order": {"properties": {"id": {"type": "string", "title": "Id", "description": "Reference ID of the key.", "default": "674f35b23f399d9f9df7b0b5"}, "create_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Create At"}, "update_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Update At"}, "num": {"type": "string", "title": "Num", "description": "Order number", "examples": ["ON-20231115-1234567890"]}, "room_id": {"type": "string", "title": "Room Id", "description": "Room ID", "examples": ["674f35b23f399d9f9df7b0b7"]}, "guest": {"$ref": "#/components/schemas/Guest-Output", "description": "Guest information"}, "type": {"type": "string", "title": "Type", "description": "OrderType", "examples": ["booked"]}, "scheduled_checkin_at": {"type": "string", "format": "date-time", "title": "Scheduled Checkin At", "description": "Creation timestamp"}, "scheduled_checkout_at": {"type": "string", "format": "date-time", "title": "Scheduled Checkout At", "description": "Creation timestamp"}}, "type": "object", "required": ["create_at", "type"], "title": "Order"}, "OrderInput": {"properties": {"num": {"type": "string", "title": "Num", "description": "Order number", "examples": ["ON-20231115-1234567890"]}, "room_id": {"type": "string", "title": "Room Id", "description": "Room ID", "examples": ["674f35b23f399d9f9df7b0b7"]}, "guest": {"$ref": "#/components/schemas/Guest-Input", "description": "Guest information"}, "type": {"type": "string", "title": "Type", "description": "OrderType", "examples": ["booked"]}, "scheduled_checkin_at": {"type": "string", "format": "date-time", "title": "Scheduled Checkin At", "description": "Creation timestamp"}, "scheduled_checkout_at": {"type": "string", "format": "date-time", "title": "Scheduled Checkout At", "description": "Creation timestamp"}}, "type": "object", "required": ["type"], "title": "OrderInput"}, "OrderResponses": {"properties": {"data": {"anyOf": [{"items": {"$ref": "#/components/schemas/Order"}, "type": "array"}, {"type": "null"}], "title": "Data"}, "detail": {"type": "string", "title": "Detail", "default": "Successfully."}, "status": {"type": "integer", "title": "Status", "default": 200}, "used_time": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Used Time"}, "stayforge": {"$ref": "#/components/schemas/Stayforge", "default": {"ver": "1.0.0"}}}, "type": "object", "required": ["data"], "title": "OrderResponses"}, "Room": {"properties": {"id": {"type": "string", "title": "Id", "description": "Reference ID of the key.", "default": "674f35b23f399d9f9df7b0b5"}, "create_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Create At"}, "update_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Update At"}, "key_id": {"type": "string", "title": "Key Id", "description": "Reference ID of the key.", "default": "674f35b23f399d9f9df7b0b8"}, "room_type_id": {"type": "string", "title": "Room Type Id", "description": "Reference ID of the RoomType.", "default": "674f35b23f399d9f9df7b0b9"}, "number": {"type": "string", "title": "Number", "description": "The number of rooms, e.g., 203.", "examples": ["506"]}, "priority": {"type": "integer", "title": "Priority", "description": "The OTA system will give priority to rooms with a higher value to guests. If the priorities are the same, then it is random."}}, "type": "object", "required": ["create_at", "number", "priority"], "title": "Room"}, "RoomInput": {"properties": {"key_id": {"type": "string", "title": "Key Id", "description": "Reference ID of the key.", "default": "674f35b23f399d9f9df7b0b8"}, "room_type_id": {"type": "string", "title": "Room Type Id", "description": "Reference ID of the RoomType.", "default": "674f35b23f399d9f9df7b0b9"}, "number": {"type": "string", "title": "Number", "description": "The number of rooms, e.g., 203.", "examples": ["506"]}, "priority": {"type": "integer", "title": "Priority", "description": "The OTA system will give priority to rooms with a higher value to guests. If the priorities are the same, then it is random."}}, "type": "object", "required": ["number", "priority"], "title": "RoomInput"}, "RoomResponses": {"properties": {"data": {"anyOf": [{"items": {"$ref": "#/components/schemas/Room"}, "type": "array"}, {"type": "null"}], "title": "Data"}, "detail": {"type": "string", "title": "Detail", "default": "Successfully."}, "status": {"type": "integer", "title": "Status", "default": 200}, "used_time": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Used Time"}, "stayforge": {"$ref": "#/components/schemas/Stayforge", "default": {"ver": "1.0.0"}}}, "type": "object", "required": ["data"], "title": "RoomResponses"}, "RoomType": {"properties": {"id": {"type": "string", "title": "Id", "description": "Reference ID of the key.", "default": "674f35b23f399d9f9df7b0b5"}, "create_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Create At"}, "update_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Update At"}, "name": {"type": "string", "title": "Name", "description": "The Type of RoomType", "examples": ["\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9", "\u30d7\u30ec\u30df\u30a2\u30e0"]}, "description": {"type": "string", "title": "Description", "description": "Description of the room type."}, "price": {"type": "string", "title": "Price", "description": "Current price. If you deploy a price controller, this value will be updated automatically.", "examples": [15471]}, "price_policy": {"type": "string", "title": "Price Policy", "description": "The price controller will modify the corresponding price field based on the price policy ID."}, "price_max": {"type": "string", "title": "Price Max", "description": "The max of price.", "examples": [20671]}, "price_min": {"type": "string", "title": "Price Min", "description": "The min of price.", "examples": [10623]}}, "type": "object", "required": ["create_at", "name", "price", "price_min"], "title": "RoomType"}, "RoomTypeInput": {"properties": {"name": {"type": "string", "title": "Name", "description": "The Type of RoomType", "examples": ["\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9", "\u30d7\u30ec\u30df\u30a2\u30e0"]}, "description": {"type": "string", "title": "Description", "description": "Description of the room type."}, "price": {"anyOf": [{"type": "number"}, {"type": "string"}], "title": "Price", "description": "Current price. If you deploy a price controller, this value will be updated automatically.", "examples": [15471]}, "price_policy": {"type": "string", "title": "Price Policy", "description": "The price controller will modify the corresponding price field based on the price policy ID."}, "price_max": {"anyOf": [{"type": "number"}, {"type": "string"}], "title": "Price Max", "description": "The max of price.", "examples": [20671]}, "price_min": {"anyOf": [{"type": "number"}, {"type": "string"}], "title": "Price Min", "description": "The min of price.", "examples": [10623]}}, "type": "object", "required": ["name", "price", "price_min"], "title": "RoomTypeInput"}, "RoomTypeResponses": {"properties": {"data": {"anyOf": [{"items": {"$ref": "#/components/schemas/RoomType"}, "type": "array"}, {"type": "null"}], "title": "Data"}, "detail": {"type": "string", "title": "Detail", "default": "Successfully."}, "status": {"type": "integer", "title": "Status", "default": 200}, "used_time": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Used Time"}, "stayforge": {"$ref": "#/components/schemas/Stayforge", "default": {"ver": "1.0.0"}}}, "type": "object", "required": ["data"], "title": "RoomTypeResponses"}, "Stayforge": {"properties": {"ver": {"type": "string", "title": "Ver", "default": "1.0.0"}}, "type": "object", "title": "Stayforge"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "WebhooksManager": {"properties": {"id": {"type": "string", "title": "Id", "description": "Reference ID of the key.", "default": "674f35b23f399d9f9df7b0b5"}, "create_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Create At"}, "update_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Update At"}, "webhook_name": {"type": "string", "title": "Webhook Name", "description": "The Type of WebhooksManager", "examples": ["Your application"]}, "endpoint": {"type": "string", "title": "Endpoint", "description": "Description of the room type.", "examples": ["https://youapplocation/webhook/endpoint"]}, "catch_path": {"type": "string", "title": "Catch Path", "description": "Current price. If you deploy a price controller, this value will be updated automatically.", "examples": ["/api/order/"]}, "catch_method": {"type": "string", "title": "Catch Method", "description": "HTTP method to be captured.", "examples": ["POST", "GET"]}, "catch_status": {"type": "integer", "title": "Catch Status", "description": "HTTP status to be captured.", "default": 200, "examples": [200, 400, 500]}}, "type": "object", "required": ["create_at", "webhook_name", "endpoint", "catch_path", "catch_method"], "title": "WebhooksManager"}, "WebhooksManagerInput": {"properties": {"webhook_name": {"type": "string", "title": "Webhook Name", "description": "The Type of WebhooksManager", "examples": ["Your application"]}, "endpoint": {"type": "string", "title": "Endpoint", "description": "Description of the room type.", "examples": ["https://youapplocation/webhook/endpoint"]}, "catch_path": {"type": "string", "title": "Catch Path", "description": "Current price. If you deploy a price controller, this value will be updated automatically.", "examples": ["/api/order/"]}, "catch_method": {"type": "string", "title": "Catch Method", "description": "HTTP method to be captured.", "examples": ["POST", "GET"]}, "catch_status": {"type": "integer", "title": "Catch Status", "description": "HTTP status to be captured.", "default": 200, "examples": [200, 400, 500]}}, "type": "object", "required": ["webhook_name", "endpoint", "catch_path", "catch_method"], "title": "WebhooksManagerInput"}, "WebhooksManagerResponses": {"properties": {"data": {"anyOf": [{"items": {"$ref": "#/components/schemas/WebhooksManager"}, "type": "array"}, {"type": "null"}], "title": "Data"}, "detail": {"type": "string", "title": "Detail", "default": "Successfully."}, "status": {"type": "integer", "title": "Status", "default": 200}, "used_time": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Used Time"}, "stayforge": {"$ref": "#/components/schemas/Stayforge", "default": {"ver": "1.0.0"}}}, "type": "object", "required": ["data"], "title": "WebhooksManagerResponses"}, "api__branch__models__Key": {"properties": {"id": {"type": "string", "title": "Id", "description": "Reference ID of the key.", "default": "674f35b23f399d9f9df7b0b5"}, "create_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Create At"}, "update_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Update At"}, "name": {"type": "string", "title": "Name", "description": "The name of the hotel key. By default, it combines a base name with a random town.", "examples": ["\u30db\u30c6\u30eb\u30b9\u30c6\u30a4\u30d5\u30a9\u30fc\u30b8\u6238\u585a\u753a"]}, "postcode": {"type": "string", "title": "Postcode", "description": "The postal code of the key location.", "default": "000-0000", "examples": ["035-7458"]}, "address": {"type": "string", "title": "Address", "description": "The full effective of the key, including administrative unit, city, town, and detailed location.", "default": "000-0000", "examples": ["\u9ad8\u77e5\u770c\u6a2a\u6d5c\u5e02\u6cc9\u533a\u7687\u5c45\u5916\u82d15\u4e01\u76ee14\u756a5\u53f7"]}, "telephone": {"type": "string", "title": "Telephone", "description": "The contact telephone number for the key.", "examples": ["090-6733-7674"]}}, "type": "object", "required": ["create_at", "name", "telephone"], "title": "Key"}, "api__branch__models__KeyInput": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the hotel key. By default, it combines a base name with a random town.", "examples": ["\u30db\u30c6\u30eb\u30b9\u30c6\u30a4\u30d5\u30a9\u30fc\u30b8\u6238\u585a\u753a"]}, "postcode": {"type": "string", "title": "Postcode", "description": "The postal code of the key location.", "default": "000-0000", "examples": ["035-7458"]}, "address": {"type": "string", "title": "Address", "description": "The full effective of the key, including administrative unit, city, town, and detailed location.", "default": "000-0000", "examples": ["\u9ad8\u77e5\u770c\u6a2a\u6d5c\u5e02\u6cc9\u533a\u7687\u5c45\u5916\u82d15\u4e01\u76ee14\u756a5\u53f7"]}, "telephone": {"type": "string", "title": "Telephone", "description": "The contact telephone number for the key.", "examples": ["090-6733-7674"]}}, "type": "object", "required": ["name", "telephone"], "title": "KeyInput"}, "api__branch__view__KeyResponses": {"properties": {"data": {"anyOf": [{"items": {"$ref": "#/components/schemas/api__branch__models__Key"}, "type": "array"}, {"type": "null"}], "title": "Data"}, "detail": {"type": "string", "title": "Detail", "default": "Successfully."}, "status": {"type": "integer", "title": "Status", "default": 200}, "used_time": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Used Time"}, "stayforge": {"$ref": "#/components/schemas/Stayforge", "default": {"ver": "1.0.0"}}}, "type": "object", "required": ["data"], "title": "KeyResponses"}, "api__key_manager__models__Key": {"properties": {"id": {"type": "string", "title": "Id", "description": "Reference ID of the key.", "default": "674f35b23f399d9f9df7b0b5"}, "create_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Create At"}, "update_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Update At"}, "url": {"type": "string", "title": "Url", "description": "The name of the hotel key. By default, it combines a base name with a random town.", "examples": ["https://qr-key.net/AFs1f"]}, "num": {"type": "string", "title": "Num", "description": "Order number", "default": "", "examples": []}, "effective_at": {"type": "string", "title": "Effective At", "description": "Effective at", "default": "2024-12-03T16:45:38.364640Z"}, "ineffective_at": {"type": "string", "title": "Ineffective At", "description": "Ineffective at", "default": "2024-12-04T16:45:38.364650Z"}}, "type": "object", "required": ["create_at", "url"], "title": "Key"}, "api__key_manager__models__KeyInput": {"properties": {"url": {"type": "string", "title": "Url", "description": "The name of the hotel key. By default, it combines a base name with a random town.", "examples": ["https://qr-key.net/AFs1f"]}, "num": {"type": "string", "title": "Num", "description": "Order number", "default": "", "examples": []}, "effective_at": {"type": "string", "title": "Effective At", "description": "Effective at", "default": "2024-12-03T16:45:38.364640Z"}, "ineffective_at": {"type": "string", "title": "Ineffective At", "description": "Ineffective at", "default": "2024-12-04T16:45:38.364650Z"}}, "type": "object", "required": ["url"], "title": "KeyInput"}, "api__key_manager__view__KeyResponses": {"properties": {"data": {"anyOf": [{"items": {"$ref": "#/components/schemas/api__key_manager__models__Key"}, "type": "array"}, {"type": "null"}], "title": "Data"}, "detail": {"type": "string", "title": "Detail", "default": "Successfully."}, "status": {"type": "integer", "title": "Status", "default": 200}, "used_time": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Used Time"}, "stayforge": {"$ref": "#/components/schemas/Stayforge", "default": {"ver": "1.0.0"}}}, "type": "object", "required": ["data"], "title": "KeyResponses"}}}}